@model Change.Model.AddMachineParamterModel
@using Change.Data.Data;
@using Change.Common.Extension

@{ 
    var availableCPUArchitecture = Html.GetEnumSelectList<CPUArchitectureEnum>();
    foreach (var item in availableCPUArchitecture)
    {
        if (item.Text == Model.CPUArchitecture.GetName())
        {
            item.Selected = true;
        }
    }

    var availableDeviceModel = Html.GetEnumSelectList<DeviceModelEnum>();
    foreach (var item in availableCPUArchitecture)
    {
        if (item.Text == Model.DeviceName.GetName())
        {
            item.Selected = true;
        }
    }

    

}

@Html.HiddenFor(x => x.MachineId)
<div class="form-group">
    @Html.LabelFor(x => x.ActiveWirelessTechnology, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.ActiveWirelessTechnology, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ActiveWirelessTechnology, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.WifiVendor, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.WifiVendor, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.WifiVendor, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.RegionInfo, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.RegionInfo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.RegionInfo, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.RegionCode, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.RegionCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.RegionCode, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.MinimumSupportediTunesVersion, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.MinimumSupportediTunesVersion, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MinimumSupportediTunesVersion, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.FirewareVersion, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.FirewareVersion, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirewareVersion, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.ProductVersion, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.ProductVersion, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductVersion, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.ProductType, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.ProductType, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductType, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.ProductName, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.ProductName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.BuildVersion, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.BuildVersion, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.BuildVersion, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.DeviceClass, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.DeviceClass, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DeviceClass, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.DeviceColor, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.DeviceColor, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DeviceColor, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.DeviceName, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.DropDownListFor(x => x.DeviceName, availableDeviceModel, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DeviceName, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.HardwarePlatform, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.HardwarePlatform, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.HardwarePlatform, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.HWModelStr, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.HWModelStr, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.HWModelStr, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.DeviceVariant, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.DeviceVariant, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DeviceVariant, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.UserAssignedDeviceName, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.UserAssignedDeviceName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UserAssignedDeviceName, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.UniqueDeviceId, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.UniqueDeviceId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UniqueDeviceId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.CPUArchitecture, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.DropDownListFor(x => x.CPUArchitecture, availableCPUArchitecture, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CPUArchitecture, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.SerialNumber, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.ModelNumber, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.EditorFor(x => x.ModelNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ModelNumber, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(x => x.Enable, new { @class = "col-sm-2 control-label" })
    <div class="col-md-8">
        @Html.CheckBoxFor(x => x.Enable, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Enable, "", new { @class = "text-danger" })
    </div>
</div>