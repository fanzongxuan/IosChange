// <auto-generated />
using Change.Data;
using Change.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Change.Data.Migrations
{
    [DbContext(typeof(ChangeDbContext))]
    partial class ChangeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Change.Data.Data.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("EnableMachineParaters");

                    b.Property<string>("IDFA");

                    b.Property<string>("IDFV");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MAC");

                    b.HasKey("Id");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("Change.Data.Data.MachineParamter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BatteryLevel");

                    b.Property<int>("BatteryStatus");

                    b.Property<int>("CarrierName");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("DeviceModel");

                    b.Property<bool>("Enable");

                    b.Property<string>("IDFA");

                    b.Property<string>("IDFV");

                    b.Property<string>("IMEI");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LocalLanguage");

                    b.Property<string>("LocalName");

                    b.Property<string>("MAC");

                    b.Property<int>("MachineId");

                    b.Property<string>("MachineTag");

                    b.Property<string>("Name");

                    b.Property<int>("NetWorkType");

                    b.Property<string>("Resolution");

                    b.Property<string>("ResolutionZoom");

                    b.Property<string>("SaleArea");

                    b.Property<string>("ScreenBrightness");

                    b.Property<string>("SystemName");

                    b.Property<string>("SystemVersion");

                    b.Property<string>("Type");

                    b.Property<string>("UUID");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("WifiName");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("MachineParamter");
                });

            modelBuilder.Entity("Change.Data.Data.MachineParamter", b =>
                {
                    b.HasOne("Change.Data.Data.Machine")
                        .WithMany("MachineParamters")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
