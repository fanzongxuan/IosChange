// <auto-generated />
using Change.Data;
using Change.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Change.Data.Migrations
{
    [DbContext(typeof(ChangeDbContext))]
    [Migration("20180402082730_add_comment_manger")]
    partial class add_comment_manger
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Change.Data.Data.AccountUserRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppStoreAccountId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.HasIndex("AppStoreAccountId");

                    b.ToTable("AccountUserRecord");
                });

            modelBuilder.Entity("Change.Data.Data.AppStoreAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Password");

                    b.Property<int>("UseTime");

                    b.HasKey("Id");

                    b.ToTable("AppStoreAccount");
                });

            modelBuilder.Entity("Change.Data.Data.ChangeRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("UUID");

                    b.HasKey("Id");

                    b.ToTable("ChangeRecord");
                });

            modelBuilder.Entity("Change.Data.Data.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Tititle");

                    b.HasKey("Id");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Change.Data.Data.ImpactBudleId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BudleId");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("MachineId");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("ImpactBudleId");
                });

            modelBuilder.Entity("Change.Data.Data.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("EnableMachineParaters");

                    b.Property<string>("Ip");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("Change.Data.Data.MachineParamter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActiveWirelessTechnology");

                    b.Property<string>("BuildVersion");

                    b.Property<int>("CPUArchitecture");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("DeviceClass");

                    b.Property<string>("DeviceColor");

                    b.Property<int>("DeviceName");

                    b.Property<string>("DeviceVariant");

                    b.Property<bool>("Enable");

                    b.Property<string>("FirewareVersion");

                    b.Property<string>("HWModelStr");

                    b.Property<string>("HardwarePlatform");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("MachineId");

                    b.Property<string>("MinimumSupportediTunesVersion");

                    b.Property<string>("ModelNumber");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductType");

                    b.Property<string>("ProductVersion");

                    b.Property<string>("RegionCode");

                    b.Property<string>("RegionInfo");

                    b.Property<string>("SerialNumber");

                    b.Property<string>("UniqueDeviceId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UserAssignedDeviceName");

                    b.Property<string>("WifiVendor");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("MachineParamter");
                });

            modelBuilder.Entity("Change.Data.Data.ReUseRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChangeRecordId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.HasIndex("ChangeRecordId");

                    b.ToTable("ReUseRecord");
                });

            modelBuilder.Entity("Change.Data.Data.AccountUserRecord", b =>
                {
                    b.HasOne("Change.Data.Data.AppStoreAccount")
                        .WithMany("AccountUserRecords")
                        .HasForeignKey("AppStoreAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Change.Data.Data.ImpactBudleId", b =>
                {
                    b.HasOne("Change.Data.Data.Machine")
                        .WithMany("ImpactBudleIds")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Change.Data.Data.MachineParamter", b =>
                {
                    b.HasOne("Change.Data.Data.Machine")
                        .WithMany("MachineParamters")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Change.Data.Data.ReUseRecord", b =>
                {
                    b.HasOne("Change.Data.Data.ChangeRecord")
                        .WithMany("ReUseRecords")
                        .HasForeignKey("ChangeRecordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
